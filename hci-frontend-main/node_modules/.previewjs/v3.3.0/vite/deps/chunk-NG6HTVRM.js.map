{
  "version": 3,
  "sources": ["../../../../@material-ui/core/utils/helpers.js"],
  "sourcesContent": ["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.capitalize = capitalize;\nexports.contains = contains;\nexports.findIndex = findIndex;\nexports.find = find;\nexports.createChainedFunction = createChainedFunction;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nfunction capitalize(string) {\n  if (process.env.NODE_ENV !== 'production' && typeof string !== 'string') {\n    throw new Error('Material-UI: capitalize(string) expects a string argument.');\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction contains(obj, pred) {\n  return Object.keys(pred).every(function (key) {\n    return obj.hasOwnProperty(key) && obj[key] === pred[key];\n  });\n}\n\nfunction findIndex(arr, pred) {\n  var predType = (0, _typeof2.default)(pred);\n\n  for (var i = 0; i < arr.length; i += 1) {\n    if (predType === 'function' && !!pred(arr[i], i, arr) === true) {\n      return i;\n    }\n\n    if (predType === 'object' && contains(arr[i], pred)) {\n      return i;\n    }\n\n    if (['string', 'number', 'boolean'].indexOf(predType) !== -1) {\n      return arr.indexOf(pred);\n    }\n  }\n\n  return -1;\n}\n\nfunction find(arr, pred) {\n  var index = findIndex(arr, pred);\n  return index > -1 ? arr[index] : undefined;\n}\n/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\n\n\nfunction createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(typeof func === 'function', 'Material-UI: invalid Argument Type, must only provide functions, undefined, or null.') : void 0;\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}"],
  "mappings": ";;;;;;;;;;AAAA;AAAA;AAAA;AAEA,QAAI,yBAAyB;AAE7B,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,YAAQ,aAAa;AACrB,YAAQ,WAAW;AACnB,YAAQ,YAAY;AACpB,YAAQ,OAAO;AACf,YAAQ,wBAAwB;AAEhC,QAAI,WAAW,uBAAuB,gBAAwC;AAE9E,QAAI,WAAW,uBAAuB,iBAAkB;AAExD,wBAAoB,QAAQ;AAC1B,UAA6C,OAAO,WAAW,UAAU;AACvE,cAAM,IAAI,MAAM,4DAA4D;AAAA,MAC9E;AAEA,aAAO,OAAO,OAAO,CAAC,EAAE,YAAY,IAAI,OAAO,MAAM,CAAC;AAAA,IACxD;AAEA,sBAAkB,KAAK,MAAM;AAC3B,aAAO,OAAO,KAAK,IAAI,EAAE,MAAM,SAAU,KAAK;AAC5C,eAAO,IAAI,eAAe,GAAG,KAAK,IAAI,SAAS,KAAK;AAAA,MACtD,CAAC;AAAA,IACH;AAEA,uBAAmB,KAAK,MAAM;AAC5B,UAAI,WAAY,IAAG,SAAS,SAAS,IAAI;AAEzC,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AACtC,YAAI,aAAa,cAAc,CAAC,CAAC,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,MAAM;AAC9D,iBAAO;AAAA,QACT;AAEA,YAAI,aAAa,YAAY,SAAS,IAAI,IAAI,IAAI,GAAG;AACnD,iBAAO;AAAA,QACT;AAEA,YAAI,CAAC,UAAU,UAAU,SAAS,EAAE,QAAQ,QAAQ,MAAM,IAAI;AAC5D,iBAAO,IAAI,QAAQ,IAAI;AAAA,QACzB;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,kBAAc,KAAK,MAAM;AACvB,UAAI,QAAQ,UAAU,KAAK,IAAI;AAC/B,aAAO,QAAQ,KAAK,IAAI,SAAS;AAAA,IACnC;AAYA,qCAAiC;AAC/B,eAAS,OAAO,UAAU,QAAQ,QAAQ,IAAI,MAAM,IAAI,GAAG,OAAO,GAAG,OAAO,MAAM,QAAQ;AACxF,cAAM,QAAQ,UAAU;AAAA,MAC1B;AAEA,aAAO,MAAM,OAAO,SAAU,KAAK,MAAM;AACvC,YAAI,QAAQ,MAAM;AAChB,iBAAO;AAAA,QACT;AAEA,eAAyC,IAAG,SAAS,SAAS,OAAO,SAAS,YAAY,sFAAsF,IAAI;AACpL,eAAO,2BAA2B;AAChC,mBAAS,QAAQ,UAAU,QAAQ,OAAO,IAAI,MAAM,KAAK,GAAG,QAAQ,GAAG,QAAQ,OAAO,SAAS;AAC7F,iBAAK,SAAS,UAAU;AAAA,UAC1B;AAEA,cAAI,MAAM,MAAM,IAAI;AACpB,eAAK,MAAM,MAAM,IAAI;AAAA,QACvB;AAAA,MACF,GAAG,WAAY;AAAA,MAAC,CAAC;AAAA,IACnB;AAAA;AAAA;",
  "names": []
}
